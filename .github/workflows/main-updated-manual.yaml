name: Main Updated Manual

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: The AWS account to deploy to.
        options:
        - DEV
        - INT
        required: true
      deploy_mgmt:
        type: boolean
        description: Deploy MGMT stack
        default: false
      deploy_events:
        type: boolean
        description: Deploy MNS Events stack
        default: false
      dryrun_mgmt:
        type: boolean
        description: Dry-run MGMT stack deployment
        default: false
      dryrun_events:
        type: boolean
        description: Dry-run MNS Events stack deployment
        default: false

env:
  ACCOUNT: ${{ secrets[format('{0}_AWS_ACCOUNT_ID', inputs.environment)] }}
  APIM_ENVIRONMENT: ${{ secrets[format('{0}_APIM_ENVIRONMENT', inputs.environment)] }}
  APIM_APP_ID: ${{ secrets[format('{0}_APIM_APP_ID', inputs.environment)] }}


jobs:
  pre-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python 3.11
        run: echo Set up Python 3.11

      - name: Install Dependencies
        run: echo Installing Dependencies

      - name: Configure AWS Credentials
        run: echo Assuming correct role for :${{ env.ACCOUNT }}

      - name: Other Stuff
        run: echo Doing other pre-deployment stuff

      - name: Run TF Plan against MGMT
        if: ${{ inputs.deploy_mgmt || inputs.dryrun_mgmt}}
        run: echo Running TF plan against mgmt

      - name: Run TF Plan against Events
        if: ${{ inputs.deploy_events || inputs.dryrun_events}}
        run: echo Running TF plan against mgmt

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Run TF Apply against MGMT
        if: ${{ inputs.deploy_mgmt }}
        run: echo Running TF apply against mgmt

      - name: Run Deploy Layers
        if: ${{ inputs.deploy_events }}
        run: echo Running Deploy Layers

      - name: Run TF Apply against Events
        if: ${{ inputs.deploy_mgmt }}
        run: echo Running TF apply against mgmt


  post-deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Run Behave Tests
        if: ${{ inputs.deploy_events }}
        run: echo Running Behave Tests against ${{ env.APIM_APP_ID }}

      - name: Run APIM Smoke Tests
        if: ${{ inputs.deploy_events }}
        run: echo Running APIM Smoke Tests against  ${{ env.APIM_ENVIRONMENT }}

