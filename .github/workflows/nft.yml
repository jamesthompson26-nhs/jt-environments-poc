name: Run NFT
## Run NFT against a given MNS stack.

on:
  workflow_dispatch:
    inputs:
      apim_environment:
        type: string
        description: The APIM Environment to run NFT against.
        default: 'internal-dev'
      ramp_up:
        type: string
        description: How many seconds to spend ramping up to the target volume.
        default: '300'
      thread_count:
        type: string
        description: The pool size of threads jmeter uses to generate the load.
        default: '15'
      tps:
        type: string
        description: The number of requests per second to send.
        default: '4'
      duration:
        type: string
        description: The duration in seconds of the test, not including ramp up.
        default: '3600'

concurrency:
  group: ${{ inputs.apim_environment }}

jobs:
  nft:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pr-checks-common-setup

      - name: Run JMeter Tests
        uses: QAInsights/PerfAction@v3.1
        with:
          test-plan-path: ../../scripts/load-generating-jmeter/jmeter-load-suite.jmx
          args: "-J apim_env=${{ inputs.apim_environment }} -J ramp_up=${{ inputs.ramp_up }} -J thread_count=${{ inputs.thread_count }} -J tps=${{ inputs.tps }} -J duration=${{ inputs.duration }}"

      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-results
          path: result.jtl
